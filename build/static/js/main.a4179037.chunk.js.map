{"version":3,"sources":["components/JsonUploadButton/JsonUploadButton.js","components/JsonDataForm/JsonDataForm.js","components/CompareInput/CompareInput.js","components/CompareOutput/CompareOutput.js","components/JsonDataCompareButton/JsonDataCompareButton.js","App.js","index.js"],"names":["JsonUploadButton","className","handleAdd","readFile","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","name","value","result","readAsText","handleChange","event","a","files","target","all","Array","from","map","onChange","accept","type","multiple","hidden","JsonDataForm","jsonData","handleUpdate","handleRemove","onClick","title","placeholder","defaultJsonData","CompareInput","jsonsData","setJsonsData","index","data","updatedJsonsData","handleUpdateJsonData","filter","_","i","handleRemoveJsonData","handleAddJsonData","listOfJsonsData","CompareOutput","comparedData","JSON","stringify","JsonDataCompareButton","setComparedData","getDeepObjectKeys","obj","Object","keys","key","flat","getGroppedJsonKeysByName","_jsons","groppedJsonKeysByName","forEach","dJSON","parse","getUncomparedJsonsNamesByKeys","values","array","indexOf","uncomparedJsonsNames","undefined","length","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4179037.chunk.js","sourcesContent":["// # Todo: add styles\nconst JsonUploadButton = ({ className, handleAdd }) => {\n  const readFile = (file) => {\n    const reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      reader.onerror = () => {\n        reader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n  \n      reader.onload = () => {\n        resolve({\n          name: file.name,\n          value: reader.result,\n        });\n      };\n\n      reader.readAsText(file);\n    });\n  };\n  \n  const readFiles = (files) => {\n    return Promise.all(\n      Array.from(files).map(async file => await readFile(file))\n    );\n  };\n\n  const handleChange = async (event) => {\n    handleAdd(await readFiles(event.target.files));\n  };\n\n  // # Do I nedd to use Button component here?\n  return (\n    <label className={className}>\n      <input\n        onChange={handleChange}\n        accept=\"application/JSON\"\n        type=\"file\"\n        multiple\n        hidden\n      />\n      Upload JSONs\n    </label>\n  );\n};\n\nexport default JsonUploadButton;\n","// # Todo: add styles\nconst JsonDataForm = ({ jsonData, handleUpdate, handleRemove }) => {\n  const handleChange = ({ target: { name, value } }) => {\n    handleUpdate({ ...jsonData, [name]: value });\n  };\n\n  return (\n    <div className=\"JsonDataForm\">\n      <div\n        className=\"JsonDataForm__remove\"\n        onClick={handleRemove}\n        title=\"Remove JSON\"\n      >\n        X\n      </div>\n\n      {/* Todo: Create Input component */}\n      {/* Todo: Add validation */}\n      <input\n        name=\"name\"\n        placeholder=\"JSON name\"\n        className=\"JsonDataForm__input\"\n        onChange={handleChange}\n        value={jsonData.name}\n      />\n\n      {/* Todo: Create Textarea component */}\n      {/* Todo: Add validation */}\n      <textarea\n        name=\"value\"\n        placeholder=\"JSON value\"\n        className=\"JsonDataForm__input JsonDataForm__textarea\"\n        onChange={handleChange}\n        value={jsonData.value}\n      />\n    </div>\n  )\n};\n\nexport default JsonDataForm;","import JsonUploadButton from 'components/JsonUploadButton';\nimport JsonDataForm from 'components/JsonDataForm';\n\nconst defaultJsonData = { name: '', value: '' };\n\n// # Todo: add styles\nconst CompareInput = ({ jsonsData, setJsonsData }) => {\n  const handleAddJsonData = (data = defaultJsonData) => {\n    setJsonsData([...jsonsData, data ])\n  };\n\n  const handleAddBulkJsonsData = (listOfJsonsData) => {\n    setJsonsData([...jsonsData, ...listOfJsonsData ]);\n  }\n\n  const handleUpdateJsonData = (data, index) => {\n    const updatedJsonsData = [...jsonsData];    \n    updatedJsonsData[index] = data;\n    setJsonsData(updatedJsonsData);\n  };\n\n  const handleRemoveJsonData = (index) => {\n    setJsonsData(jsonsData.filter((_, i) => i !== index));\n  };\n\n  return (\n    <div className=\"CompareInput\">\n      <div className=\"CompareInput__content\">\n        {jsonsData.map((jsonData, index) => (\n          <JsonDataForm\n            key={index}\n            jsonData={jsonData}\n            className=\"CompareInput__item\"\n            handleUpdate={data => handleUpdateJsonData(data, index)}\n            handleRemove={() => handleRemoveJsonData(index)}\n          />\n        ))}\n\n        <div className=\"CompareInput__item CompareInput__item--add\">\n          {/* icon? */}\n\n          {/* Todo: make button component */}\n          <div\n            className=\"CompareInput__button CompareInput__button--add\"\n            onClick={() => handleAddJsonData()}\n          >\n            + Add JSON form\n          </div>\n\n          <div className=\"CompareInput__separator\">or</div>\n\n          {/* Do I need to use button component here? */}\n          <JsonUploadButton\n            className=\"CompareInput__button CompareInput__button--upload\"\n            handleAdd={data => handleAddBulkJsonsData(data)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CompareInput;","// # Todo: add styles\nconst CompareOutput = ({ comparedData }) => {\n  return comparedData ? (\n    <div className=\"CompareOutput\">\n      <pre>{JSON.stringify(comparedData, ' ', 2)}</pre>\n    </div>\n  ): null;\n};\n\nexport default CompareOutput;\n","// # Do i need to use Button component here?\nimport dJSON from 'dirty-json';\n\n// # Todo: add styles\nconst JsonDataCompareButton = ({ jsonsData, setComparedData }) => {\n  const getDeepObjectKeys = (obj) => {\n    return Object.keys(obj)\n      .map((key) =>\n        typeof obj[key] === 'object'\n          ? getDeepObjectKeys(obj[key]).map(i => `${key}.${i}`)\n          : key\n      ).flat();\n  };\n  \n  const getGroppedJsonKeysByName = (_jsons) => {\n    const groppedJsonKeysByName = {};\n  \n    // # TODO: add error handler (may be you can create useAlert hook to show error message)\n    try {\n      _jsons.forEach(({ name, value }) => groppedJsonKeysByName[name] = getDeepObjectKeys(dJSON.parse(value)));\n    } catch {\n      return {};\n    }\n    \n    return groppedJsonKeysByName;\n  };\n  \n  const getUncomparedJsonsNamesByKeys = (_jsons) => {\n    const getUncomparedJsonsNamesByKeys = {};\n  \n    const groppedJsonKeysByName = getGroppedJsonKeysByName(_jsons);\n  \n    const allJsonsKeyList = Object.values(groppedJsonKeysByName)\n      .flat()\n      .filter((value, index, array) => array.indexOf(value) === index);\n  \n    allJsonsKeyList.forEach((key) => {\n      const uncomparedJsonsNames = _jsons\n        .map(({ name }) => groppedJsonKeysByName[name].indexOf(key) === -1 ? name : undefined)\n        .filter(i => i);\n      \n      if (uncomparedJsonsNames.length > 0) {\n        getUncomparedJsonsNamesByKeys[key] = uncomparedJsonsNames;\n      }\n    });\n  \n    return getUncomparedJsonsNamesByKeys;\n  }\n\n  const handleClick = () => {\n    setComparedData(getUncomparedJsonsNamesByKeys(jsonsData));\n  }\n\n  return (\n    <button\n      className=\"JsonDataCompareButton\"\n      onClick={handleClick}\n    >\n      Compare\n    </button>\n  );\n}\n\nexport default JsonDataCompareButton;\n","import { useState } from 'react';\nimport CompareInput from 'components/CompareInput';\nimport CompareOutput from 'components/CompareOutput';\nimport JsonDataCompareButton from 'components/JsonDataCompareButton';\n\nfunction App() {\n  const [ jsonsData, setJsonsData ] = useState([]);\n  const [ comparedData, setComparedData ] = useState();\n\n  const handleReset = () => {\n    setJsonsData([]);\n    setComparedData();\n  };\n\n  return (\n    <div className=\"App\">\n      <CompareInput\n        jsonsData={jsonsData}\n        setJsonsData={setJsonsData}\n      />\n      \n      <div>\n        <button onClick={handleReset}>Reset</button>\n        \n        <JsonDataCompareButton\n          jsonsData={jsonsData}\n          setComparedData={setComparedData}\n        />\n      </div>\n      \n      <CompareOutput comparedData={comparedData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}